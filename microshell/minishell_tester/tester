#!/bin/bash

MINISHELL_PATH="../minishell"

# Run a specific test if the file name was specified
if [[ $1 ]]; then
    if [[ -d $1 ]]; then
        test_lists=()
        for file in "$1"/*; do
            # ÂêÑ„Éï„Ç°„Ç§„É´„Çí„É™„Çπ„Éà„Å´ËøΩÂä†Ôºà„Éá„Ç£„É¨„ÇØ„Éà„É™„ÇíÂê´„ÇÅ„Åü„ÅÑÂ†¥Âêà„ÅØÂ§âÊõ¥ÂèØËÉΩÔºâ
            test_lists+=("$file")
        done
    else
        # ÂºïÊï∞„ÅåÂçò‰∏Ä„ÅÆ„ÉÜ„Çπ„ÉàÂêç„ÅÆÂ†¥Âêà„ÄÅ„Åù„ÅÆ„ÉÜ„Çπ„Éà„Å†„Åë„Çí„É™„Çπ„Éà„Å´ËøΩÂä†
        test_lists=(
            "$1"
        )
    fi
else
    # „Éá„Éï„Ç©„É´„Éà„ÅÆ„ÉÜ„Çπ„Éà„É™„Çπ„Éà
    test_lists=(
        "builtins"
        "pipes"
        "redirects"
        "extras"
    )
fi
if [[ $1 == "wildcards"  || $1 == "bonus" ]]; then
	MINISHELL_PATH="../minishell_bonus"
fi

BOLD="\e[1m"
YELLOW="\033[0;33m"
GREY="\033[38;5;244m"
PURPLE="\033[0;35m"
BLUE="\033[0;36m"
RED="\e[0;31m"
END="\033[0m"

chmod 000 ./test_files/invalid_permission
mkdir ./outfiles
mkdir ./mini_outfiles
mkdir ./bash_outfiles

setup_permission_tests() {
    mkdir -p ./test_files

    touch ./test_files/_file
    touch ./test_files/r_file
    touch ./test_files/rw_file
    touch ./test_files/re_file
    touch ./test_files/w_file
    touch ./test_files/we_file
    touch ./test_files/e_file
    touch ./test_files/rxe_file

    mkdir ./test_files/_dir
    mkdir ./test_files/r_dir
    mkdir ./test_files/rw_dir
    mkdir ./test_files/re_dir
    mkdir ./test_files/w_dir
    mkdir ./test_files/we_dir
    mkdir ./test_files/e_dir
    mkdir ./test_files/rxe_dir
}

cleanup_permission_tests() {
    chmod 600 ./test_files/rw_file  # Ë™≠„ÅøÂèñ„Çä„Å®Êõ∏„ÅçËæº„Åø
    chmod 500 ./test_files/re_file  # Ë™≠„ÅøÂèñ„Çä„Å®ÂÆüË°å
    chmod 200 ./test_files/w_file   # Êõ∏„ÅçËæº„Åø„ÅÆ„Åø
    chmod 300 ./test_files/we_file  # Êõ∏„ÅçËæº„Åø„Å®ÂÆüË°å
    chmod 100 ./test_files/e_file   # ÂÆüË°å„ÅÆ„Åø
    chmod 700 ./test_files/rxe_file # Ë™≠„ÅøÂèñ„Çä„ÉªÊõ∏„ÅçËæº„Åø„ÉªÂÆüË°å

    chmod 000 ./test_files/_dir     # Ë™≠„ÅøÂèñ„Çä„ÉªÊõ∏„ÅçËæº„Åø„ÉªÂÆüË°å„Å™„Åó
    chmod 400 ./test_files/r_dir    # Ë™≠„ÅøÂèñ„Çä„ÅÆ„Åø
    chmod 600 ./test_files/rw_dir   # Ë™≠„ÅøÂèñ„Çä„Å®Êõ∏„ÅçËæº„Åø
    chmod 500 ./test_files/re_dir   # Ë™≠„ÅøÂèñ„Çä„Å®ÂÆüË°å
    chmod 200 ./test_files/w_dir    # Êõ∏„ÅçËæº„Åø„ÅÆ„Åø
    chmod 300 ./test_files/we_dir   # Êõ∏„ÅçËæº„Åø„Å®ÂÆüË°å
    chmod 100 ./test_files/e_dir    # ÂÆüË°å„ÅÆ„Åø
    chmod 700 ./test_files/rxe_dir  # Ë™≠„ÅøÂèñ„Çä„ÉªÊõ∏„ÅçËæº„Åø„ÉªÂÆüË°å
}

printf $RED
echo "üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•";
echo "                                                                                             ";
echo " ‚ñà‚ñà    ‚ñà‚ñà ‚ñà ‚ñà‚ñà    ‚ñà ‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà   ‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà     ‚ñà       ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà  ";
echo " ‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà ‚ñà ‚ñà‚ñà‚ñà   ‚ñà ‚ñà ‚ñà     ‚ñà   ‚ñà ‚ñà     ‚ñà     ‚ñà         ‚ñà‚ñà   ‚ñà     ‚ñà       ‚ñà‚ñà   ‚ñà     ‚ñà   ‚ñà‚ñà ";
echo " ‚ñà ‚ñà‚ñà‚ñà‚ñà ‚ñà ‚ñà ‚ñà ‚ñà‚ñà  ‚ñà ‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà  ‚ñà     ‚ñà         ‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà  ";
echo " ‚ñà  ‚ñà‚ñà  ‚ñà ‚ñà ‚ñà  ‚ñà‚ñà ‚ñà ‚ñà     ‚ñà ‚ñà   ‚ñà ‚ñà     ‚ñà     ‚ñà         ‚ñà‚ñà   ‚ñà         ‚ñà   ‚ñà‚ñà   ‚ñà     ‚ñà   ‚ñà‚ñà ";
echo " ‚ñà      ‚ñà ‚ñà ‚ñà   ‚ñà‚ñà‚ñà ‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà   ‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà     ‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà   ‚ñà‚ñà ";
echo "                                                                                             ";
echo "üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•üî•";
echo "                                                                                              ";

PROMPT=$(echo -e "\nexit\n" | $MINISHELL_PATH | head -n 1 | sed "s/\x1B\[[0-9;]\{1,\}[A-Za-z]//g" )
# Helper commands:
REMOVE_COLORS="sed s/\x1B\[[0-9;]\{1,\}[A-Za-z]//g"
REMOVE_EXIT="grep -v ^exit$"

for testfile in ${test_lists[*]}; do

	printf $RED
	echo ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî $testfile

	while read teste; do
		((i++))

		rm -rf ./outfiles/*
		rm -rf ./mini_outfiles/*
		MINI_OUTPUT=$(echo -e "$teste" | $MINISHELL_PATH 2> /dev/null | $REMOVE_COLORS | grep -vF "$PROMPT" | $REMOVE_EXIT )
		MINI_OUTFILES=$(cp ./outfiles/* ./mini_outfiles &>/dev/null)
		MINI_EXIT_CODE=$(echo -e "$MINISHELL_PATH\n$teste\necho \$?\nexit\n" | bash 2> /dev/null | $REMOVE_COLORS | grep -vF "$PROMPT" | $REMOVE_EXIT | tail -n 1)
		MINI_ERROR_MSG=$(trap "" PIPE && echo "$teste" | $MINISHELL_PATH 2>&1 > /dev/null | grep -o '[^:]*$' )

		rm -rf ./outfiles/*
		rm -rf ./bash_outfiles/*
		BASH_OUTPUT=$(echo -e "$teste" | bash 2> /dev/null)
		BASH_EXIT_CODE=$(echo $?)
		BASH_OUTFILES=$(cp ./outfiles/* ./bash_outfiles &>/dev/null)
		BASH_ERROR_MSG=$(trap "" PIPE && echo "$teste" | bash 2>&1 > /dev/null | grep -o '[^:]*$' | head -n1)

		OUTFILES_DIFF=$(diff --brief ./mini_outfiles ./bash_outfiles)

		printf $YELLOW
		printf "Test %3s: " $i
		if [[ "$MINI_OUTPUT" == "$BASH_OUTPUT" && "$MINI_EXIT_CODE" == "$BASH_EXIT_CODE" && -z "$OUTFILES_DIFF" ]]; then
			printf ‚úÖ
			((ok++))
			if [ "$MINI_ERROR_MSG" != "$BASH_ERROR_MSG" ]; then
				printf "‚ö†Ô∏è "
			fi
		else
			printf ‚ùå
		fi
		printf "$GREY $teste \n$END"
		if [ "$OUTFILES_DIFF" ]; then
			echo "$OUTFILES_DIFF"
			echo mini outfiles:
			cat ./mini_outfiles/*
			echo bash outfiles:
			cat ./bash_outfiles/*
		fi
		if [ "$MINI_OUTPUT" != "$BASH_OUTPUT" ]; then
			echo mini output = \($MINI_OUTPUT\)
			echo bash output = \($BASH_OUTPUT\)
		fi
		if [ "$MINI_EXIT_CODE" != "$BASH_EXIT_CODE" ]; then
			echo mini exit code = $MINI_EXIT_CODE
			echo bash exit code = $BASH_EXIT_CODE
		fi
		if [ "$MINI_ERROR_MSG" != "$BASH_ERROR_MSG" ]; then
			echo mini error = \($MINI_ERROR_MSG\)
			echo bash error = \($BASH_ERROR_MSG\)
		fi
	done < $testfile
done

chmod 666 ./test_files/invalid_permission
rm -rf ./outfiles
rm -rf ./mini_outfiles
rm -rf ./bash_outfiles

printf $PURPLE
printf $BOLD
echo   $ok/$i
printf $END

if [[ "$ok" == "$i" ]]; then
	echo "üéä üéä üéä"
	echo "üòé üòé üòé"
	echo "üéâ üéâ üéâ"
	exit 0
else
	echo "üò≠ üò≠ üò≠"
	exit 1
fi
